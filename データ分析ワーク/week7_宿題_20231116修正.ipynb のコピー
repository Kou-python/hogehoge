{"cells":[{"cell_type":"markdown","source":["## Homework6\n","\n","データベース (data.sqlite3) に含まれる時系列データより、`goods_genre_id` ごとに `price` の平均値を算出してください。  \n","時系列データには `goods_genre_id` の情報は含まれていないので、複数のテーブルを組み合わせて処理する必要があります。  "],"metadata":{"id":"jrnC3ryjHV7l"}},{"cell_type":"markdown","metadata":{"id":"1cb2BshH6S5f"},"source":["### データ一覧\n","今回与えられるデータは data.sqlite3 という sqlite3 形式のデータベースファイルです。  \n","以下の 2 つのテーブルが含まれています。\n","\n","* data ... 時系列データ\n","* goods ... 商品に関する補足情報\n","\n","### カラム情報一覧\n","テーブルに含まれるカラムの情報は、以下の通りです。\n","\n","* index ... (店舗, 商品) の各組み合わせに対して割り振られるID\n","* store_id ... 店舗ID\n","* goods_id ... 商品ID\n","* goods_genre_id ... 商品カテゴリID\n","* units_sold_day ... 商品の一日の売り上げ個数\n","* units_sold_month ... 商品のひと月の売り上げ個数\n","* price ... 商品の現在の値段\n","* yy-mm-dd ... 日付 (yy/mm/dd形式)\n","* num_month ... 各月にわりふられた値 (平成25年1月=1, 平成25年2月=2,...,平成27年9月=33)\n","* goods_name ... 商品名\n","* store_name ... 店舗名\n","* goods_genre_name ... 商品カテゴリ名\n","\n","### 提出/採点\n","提出するときは、以下の点に注意してください。\n","\n","- 回答は、下記のコードを実行することで出力されるcsvファイルを、Omnicampus上で提出してください。\n","- 下記のコードの`!!WRITE ME!!`にクエリを書いて課題の処理を行ってください。  \n"," 「`!!WRITE ME!!`」は消して、記入してください。また，クエリは一つであるとは限りません。  \n","- 下記のコードの処理内容やsqlite3ライブラリの利用については、補足資料「csv_from_database.ipynb」「csv_from_database.pdf」を参考ください。\n","- 提出するデータの形式は、以下のような**csvファイル**であることを確認してください。  \n","\n","goods_genre_id|avg_price\n","---|---\n","1|25000\n","3|26500\n","4|25000\n","…|…\n","196|20000\n","200|27000"]},{"cell_type":"code","source":["import sqlite3\n","import csv\n","\n","# ドライブのマウント\n","# Google Colaboratoryで作業する場合に実行してください。\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","# データベースファイルのパス\n","dbpath = '//content/drive/MyDrive/Colab Notebooks/GCI_2023_Winter/data/data.sqlite3.sqlite3'\n","\n","# データベース接続\n","conn = sqlite3.connect(dbpath)\n","cur = conn.cursor()"],"metadata":{"id":"cIXbkz3wPymo","executionInfo":{"status":"ok","timestamp":1702397199259,"user_tz":-540,"elapsed":20925,"user":{"displayName":"user","userId":"01937058939287013555"}},"outputId":"3f47f628-ff8f-432b-8625-4db740f8d6c1","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["cur = conn.cursor()\n","cur.execute('')\n","cnt=0\n","\n","cur.execute('select sql from sqlite_master where type = \"table\"')\n","print(cur.fetchone())\n","two=cur.fetchone()\n","\n","cur.execute('select * from data limit 5')\n","for i in cur.fetchall():\n","  print(i)\n","\n","print(\"\")\n","print(two)\n","cur.execute('select * from goods limit 5')\n","for i in cur.fetchall():\n","  print(i)"],"metadata":{"id":"kL-FZKWsQD9i","executionInfo":{"status":"ok","timestamp":1702397199260,"user_tz":-540,"elapsed":11,"user":{"displayName":"user","userId":"01937058939287013555"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"ab172ad8-7202-419c-e73e-4b355e641fe5"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["('CREATE TABLE data(\\n  \"yy_mm_dd\" TEXT,\\n  \"num_month\" TEXT,\\n  \"store_id\" TEXT,\\n  \"goods_id\" TEXT,\\n  \"price\" TEXT,\\n  \"units_sold_day\" TEXT\\n)',)\n","('25-01-29', '-33', '43', '17718', '44943', '2')\n","('25-01-08', '-33', '32', '8648', '14949', '1')\n","('25-01-16', '-33', '53', '10168', '30158', '1')\n","('25-01-23', '-33', '31', '1005', '9922', '1')\n","('25-01-12', '-33', '27', '19861', '14988', '0')\n","\n","('CREATE TABLE goods(\\n  \"goods_name\" TEXT,\\n  \"goods_id\" TEXT,\\n  \"goods_genre_id\" TEXT\\n)',)\n","('! POWER IN glamor (PLAST.) D', '1', '41')\n","('! ABBYY FineReader 12 Professional Edition Full [PC, Digital Version]', '2', '77')\n","('*** In the glory (UNV) D', '3', '41')\n","('*** BLUE WAVE (Univ) D', '4', '41')\n","('*** BOX (GLASS) D', '5', '41')\n"]}]},{"cell_type":"code","source":["# データベース (data.sqlite3) に含まれる時系列データより、goods_genre_id ごとに price の平均値を算出してください。\n","# 時系列データには goods_genre_id の情報は含まれていないので、複数のテーブルを組み合わせて処理する必要があります。\n","cur = conn.cursor()\n","cur.execute(\"select goods_genre_id, avg(price) as avg_price from goods a join data b on a.goods_id=b.goods_id group by goods_genre_id order by CAST(goods_genre_id AS UNSIGNED);\")\n","for i in cur.fetchall():\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0WUf40EP8VPJ","executionInfo":{"status":"ok","timestamp":1702397988950,"user_tz":-540,"elapsed":395,"user":{"displayName":"user","userId":"01937058939287013555"}},"outputId":"3056d727-2ba5-4048-d3ef-7170d66f28dc"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["('3', 168482.4)\n","('4', 47476.5)\n","('5', 129025.0)\n","('6', 39211.333333333336)\n","('7', 158876.2)\n","('12', 1381663.0)\n","('15', 1197012.5)\n","('16', 1315036.0)\n","('19', 29577.0)\n","('20', 154165.75)\n","('21', 248176.0)\n","('22', 52100.066666666666)\n","('23', 167440.53846153847)\n","('24', 164675.7037037037)\n","('26', 71894.57142857143)\n","('29', 63498.39473684211)\n","('30', 129826.33333333333)\n","('31', 42573.60625)\n","('32', 41988.6)\n","('34', 120571.0)\n","('36', 222425.0)\n","('38', 42881.25)\n","('39', 108544.72222222222)\n","('41', 27312.9203187251)\n","('42', 96667.75)\n","('44', 28968.470588235294)\n","('46', 20584.5)\n","('50', 34330.857142857145)\n","('56', 26939.964285714286)\n","('58', 26590.416666666668)\n","('59', 92398.5)\n","('60', 45314.42857142857)\n","('61', 171138.33333333334)\n","('62', 79763.0)\n","('63', 67526.75)\n","('64', 44575.181818181816)\n","('65', 99287.0625)\n","('66', 30284.083333333332)\n","('67', 13455.6)\n","('68', 47454.0)\n","('70', 81622.5)\n","('71', 29752.75)\n","('73', 142723.16666666666)\n","('74', 95758.0)\n","('76', 162571.72222222222)\n","('77', 149070.0)\n","('78', 24784.666666666668)\n","('80', 44943.0)\n","('82', 6410.0)\n","('83', 1911.0)\n","('84', 8516.6)\n"]}]},{"cell_type":"markdown","source":["### CSV出力"],"metadata":{"id":"4te_OMF48SHr"}},{"cell_type":"code","source":["# SQL文\n","cur = conn.cursor()\n","cur.execute(\"select goods_genre_id, avg(price) as avg_price from goods a join data b on a.goods_id=b.goods_id group by goods_genre_id order by CAST(goods_genre_id AS UNSIGNED);\")\n","# 処理結果をcsv出力\n","with open('out.csv', 'w', newline='') as csvfile:\n","  csv_writer = csv.writer(csvfile)\n","  csv_writer.writerow([i[0] for i in cur.description])\n","  csv_writer.writerows(cur)\n","\n","# 処理の確定\n","conn.commit()\n","\n","# カーソルを閉じる\n","cur.close()\n","\n","# 接続を閉じる\n","conn.close\n","\n","# 出力確認\n","pd.read_csv('out.csv')"],"metadata":{"id":"MJQ9QeNQP1aQ","executionInfo":{"status":"ok","timestamp":1702398083472,"user_tz":-540,"elapsed":7,"user":{"displayName":"user","userId":"01937058939287013555"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"1081a916-0451-48ed-c38e-46d819df434b"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    goods_genre_id     avg_price\n","0                3  1.684824e+05\n","1                4  4.747650e+04\n","2                5  1.290250e+05\n","3                6  3.921133e+04\n","4                7  1.588762e+05\n","5               12  1.381663e+06\n","6               15  1.197012e+06\n","7               16  1.315036e+06\n","8               19  2.957700e+04\n","9               20  1.541658e+05\n","10              21  2.481760e+05\n","11              22  5.210007e+04\n","12              23  1.674405e+05\n","13              24  1.646757e+05\n","14              26  7.189457e+04\n","15              29  6.349839e+04\n","16              30  1.298263e+05\n","17              31  4.257361e+04\n","18              32  4.198860e+04\n","19              34  1.205710e+05\n","20              36  2.224250e+05\n","21              38  4.288125e+04\n","22              39  1.085447e+05\n","23              41  2.731292e+04\n","24              42  9.666775e+04\n","25              44  2.896847e+04\n","26              46  2.058450e+04\n","27              50  3.433086e+04\n","28              56  2.693996e+04\n","29              58  2.659042e+04\n","30              59  9.239850e+04\n","31              60  4.531443e+04\n","32              61  1.711383e+05\n","33              62  7.976300e+04\n","34              63  6.752675e+04\n","35              64  4.457518e+04\n","36              65  9.928706e+04\n","37              66  3.028408e+04\n","38              67  1.345560e+04\n","39              68  4.745400e+04\n","40              70  8.162250e+04\n","41              71  2.975275e+04\n","42              73  1.427232e+05\n","43              74  9.575800e+04\n","44              76  1.625717e+05\n","45              77  1.490700e+05\n","46              78  2.478467e+04\n","47              80  4.494300e+04\n","48              82  6.410000e+03\n","49              83  1.911000e+03\n","50              84  8.516600e+03"],"text/html":["\n","  <div id=\"df-0c31f957-10d3-42da-bf46-727adbe9a0d8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>goods_genre_id</th>\n","      <th>avg_price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>1.684824e+05</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>4.747650e+04</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","      <td>1.290250e+05</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6</td>\n","      <td>3.921133e+04</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7</td>\n","      <td>1.588762e+05</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>12</td>\n","      <td>1.381663e+06</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>15</td>\n","      <td>1.197012e+06</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>16</td>\n","      <td>1.315036e+06</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>19</td>\n","      <td>2.957700e+04</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>20</td>\n","      <td>1.541658e+05</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>21</td>\n","      <td>2.481760e+05</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>22</td>\n","      <td>5.210007e+04</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>23</td>\n","      <td>1.674405e+05</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>24</td>\n","      <td>1.646757e+05</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>26</td>\n","      <td>7.189457e+04</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>29</td>\n","      <td>6.349839e+04</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>30</td>\n","      <td>1.298263e+05</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>31</td>\n","      <td>4.257361e+04</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>32</td>\n","      <td>4.198860e+04</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>34</td>\n","      <td>1.205710e+05</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>36</td>\n","      <td>2.224250e+05</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>38</td>\n","      <td>4.288125e+04</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>39</td>\n","      <td>1.085447e+05</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>41</td>\n","      <td>2.731292e+04</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>42</td>\n","      <td>9.666775e+04</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>44</td>\n","      <td>2.896847e+04</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>46</td>\n","      <td>2.058450e+04</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>50</td>\n","      <td>3.433086e+04</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>56</td>\n","      <td>2.693996e+04</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>58</td>\n","      <td>2.659042e+04</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>59</td>\n","      <td>9.239850e+04</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>60</td>\n","      <td>4.531443e+04</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>61</td>\n","      <td>1.711383e+05</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>62</td>\n","      <td>7.976300e+04</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>63</td>\n","      <td>6.752675e+04</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>64</td>\n","      <td>4.457518e+04</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>65</td>\n","      <td>9.928706e+04</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>66</td>\n","      <td>3.028408e+04</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>67</td>\n","      <td>1.345560e+04</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>68</td>\n","      <td>4.745400e+04</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>70</td>\n","      <td>8.162250e+04</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>71</td>\n","      <td>2.975275e+04</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>73</td>\n","      <td>1.427232e+05</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>74</td>\n","      <td>9.575800e+04</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>76</td>\n","      <td>1.625717e+05</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>77</td>\n","      <td>1.490700e+05</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>78</td>\n","      <td>2.478467e+04</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>80</td>\n","      <td>4.494300e+04</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>82</td>\n","      <td>6.410000e+03</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>83</td>\n","      <td>1.911000e+03</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>84</td>\n","      <td>8.516600e+03</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c31f957-10d3-42da-bf46-727adbe9a0d8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c31f957-10d3-42da-bf46-727adbe9a0d8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c31f957-10d3-42da-bf46-727adbe9a0d8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e8a496a4-6aa9-4f68-bd7e-283f456a6f4f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e8a496a4-6aa9-4f68-bd7e-283f456a6f4f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e8a496a4-6aa9-4f68-bd7e-283f456a6f4f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["import pandas as pd\n","pd.read_csv('out.csv')"],"metadata":{"id":"kmL3obh00Utg","executionInfo":{"status":"ok","timestamp":1702397966073,"user_tz":-540,"elapsed":3,"user":{"displayName":"user","userId":"01937058939287013555"}},"colab":{"base_uri":"https://localhost:8080/","height":53},"outputId":"55e99870-2f67-426a-a6b2-f8fe6a2d9133"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [goods_genre_id, avg_price]\n","Index: []"],"text/html":["\n","  <div id=\"df-91032b99-5f09-4ec7-97e8-94cf11f68153\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>goods_genre_id</th>\n","      <th>avg_price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-91032b99-5f09-4ec7-97e8-94cf11f68153')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-91032b99-5f09-4ec7-97e8-94cf11f68153 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-91032b99-5f09-4ec7-97e8-94cf11f68153');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]}],"metadata":{"colab":{"provenance":[{"file_id":"1Z8vbSU86z6ywrDRBQGBg5gBlnQQvD7wr","timestamp":1701155259034}]},"interpreter":{"hash":"31f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6"},"kernelspec":{"display_name":"Python 3.8.10 64-bit","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.2"},"orig_nbformat":4},"nbformat":4,"nbformat_minor":0}